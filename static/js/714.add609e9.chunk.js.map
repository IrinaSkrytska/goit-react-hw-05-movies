{"version":3,"file":"static/js/714.add609e9.chunk.js","mappings":"8NAIe,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAChC,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAKA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA8BL,GAASM,KAAKH,EAC7C,GAAE,CAACH,KAEF,8BACIE,GAA4B,IAAlBA,EAAOK,OAGjBL,EAAOM,KAAI,SAAAC,GACT,OACE,4BACE,wBAAKA,EAAGC,UACR,uBAAID,EAAGP,WAFCO,EAAGE,SAKhB,KATD,qEAaP,C","sources":["views/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as getReviewAPI from 'services/movies-api';\n\nexport default function Reviews({ movieId }) {\n  const [review, setReview] = useState(null);\n\n  useEffect(() => {\n    getReviewAPI.getMoviesReviews(movieId).then(setReview);\n  }, [movieId]);\n  return (\n    <>\n      {!review || review.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        review.map(el => {\n          return (\n            <div key={el.reviewId}>\n              <h5>{el.author}</h5>\n              <p>{el.review}</p>\n            </div>\n          );\n        })\n      )}\n    </>\n  );\n}\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"names":["Reviews","movieId","useState","review","setReview","useEffect","getReviewAPI","then","length","map","el","author","reviewId"],"sourceRoot":""}
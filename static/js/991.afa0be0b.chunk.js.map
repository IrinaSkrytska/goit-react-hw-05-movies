{"version":3,"file":"static/js/991.afa0be0b.chunk.js","mappings":"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","sources":["services/movies-api.js","webpack://react-homework-template/./src/views/MovieDetails/MovieDetails.module.css?d4e2","views/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'e1127228e5b086ad27f085a5b4b021d7';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getPopularMovies() {\n  try {\n    const request = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n    );\n\n    const detailedRequest = request.data.results.map(e => {\n      return {\n        id: e.id,\n        movieName: e.original_title,\n      };\n    });\n    return detailedRequest;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    const request = await axios.get(\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=true`\n    );\n    const detailedRequest = request.data.results.map(e => {\n      return {\n        id: e.id,\n        movieName: e.original_title,\n      };\n    });\n    return detailedRequest;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const request = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    const detailedRequest = [request.data].map(e => {\n      return {\n        poster: `https://themoviedb.org/t/p/w500/${e.poster_path}`,\n        tag: e.tagline,\n        movieName: e.original_title,\n        userScore: e.vote_average,\n        overview: e.overview,\n        genres: e.genres.map(genre => genre.name),\n      };\n    });\n    return detailedRequest;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const request = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    const detailedRequest = request.data.cast.map(e => {\n      return {\n        castId: e.cast_id,\n        name: e.original_name,\n        character: e.character,\n        castMemberPhoto: `https://themoviedb.org/t/p/w500/${e.profile_path}`,\n      };\n    });\n    return detailedRequest;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesReviews(movieId) {\n  try {\n    const request = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n    );\n    const detailedRequest = request.data.results.map(e => {\n      return {\n        reviewId: e.id,\n        author: e.author,\n        review: e.content,\n      };\n    });\n    return detailedRequest;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"goBack_link\":\"MovieDetails_goBack_link__f+fJy\",\"image\":\"MovieDetails_image__35XpB\",\"movie_thumb\":\"MovieDetails_movie_thumb__aDTlG\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  NavLink,\n  Route,\n  Routes,\n  useParams,\n  useLocation,\n  Link,\n} from 'react-router-dom';\nimport * as getMovieDetailsAPI from 'services/movies-api';\nimport css from './MovieDetails.module.css';\n\nconst Cast = lazy(() => import('../Cast'));\nconst Reviews = lazy(() => import('../Reviews'));\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  useEffect(() => {\n    getMovieDetailsAPI.getMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const searchQuery = searchParams.get('search' ?? '');\n\n  return (\n    <div>\n      <Link\n        to={searchQuery ? `/movies?search=${searchQuery}` : '/'}\n        className={css.goBack_link}\n      >\n        &#8592; Go Back\n      </Link>\n      {movie && (\n        <div className={css.movie_thumb}>\n          <img src={movie[0].poster} alt={movie[0].tag} className={css.image} />\n          <div>\n            <h2>{movie[0].movieName}</h2>\n            <p>User score: {movie[0].userScore}</p>\n            <h3>Overview</h3>\n            <p>{movie[0].overview}</p>\n            <h3>Genres</h3>\n            <p className={css.genres}>{movie[0].genres.join(',  ')}</p>\n          </div>\n        </div>\n      )}\n      <hr />\n      <h3>More information</h3>\n      <div>\n        <ul className={css.links}>\n          <li>\n            <NavLink to={`cast?search=${searchQuery}`}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to={`reviews?search=${searchQuery}`}>Reviews</NavLink>\n          </li>\n        </ul>\n        <Routes>\n          <Route\n            path=\"cast\"\n            element={\n              <Suspense fallback={<div>Loading....</div>}>\n                <Cast movieId={movieId} />\n              </Suspense>\n            }\n          ></Route>\n          <Route\n            path=\"reviews\"\n            element={\n              <Suspense fallback={<div>Loading....</div>}>\n                <Reviews movieId={movieId} />\n              </Suspense>\n            }\n          ></Route>\n        </Routes>\n      </div>\n    </div>\n  );\n}\n"],"names":["KEY","BASE_URL","getPopularMovies","axios","request","detailedRequest","data","results","map","e","id","movieName","original_title","console","log","searchMovies","query","getMovieDetails","movieId","poster","poster_path","tag","tagline","userScore","vote_average","overview","genres","genre","name","getMovieCast","cast","castId","cast_id","original_name","character","castMemberPhoto","profile_path","getMoviesReviews","reviewId","author","review","content","Cast","lazy","Reviews","MovieDetails","useParams","useState","movie","setMovie","location","useLocation","searchParams","URLSearchParams","search","useEffect","getMovieDetailsAPI","then","searchQuery","get","to","className","css","src","alt","join","path","element","Suspense","fallback"],"sourceRoot":""}